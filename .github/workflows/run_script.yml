name: Run Python Script 4

on:
  schedule:
    - cron: '0 */12 * * *'
  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3. Cache pip
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 5. Restore posted_urls.txt from cache
      - name: Restore posted_urls.txt
        id: cache-posted
        uses: actions/cache@v4
        with:
          path: posted_urls.txt
          key: posted-urls-${{ github.run_id }}
          restore-keys: |
            posted-urls-

      # 6. Ensure posted_urls.txt exists
      - name: Ensure posted_urls.txt exists
        run: |
          if [ ! -f posted_urls.txt ]; then
            echo "" > posted_urls.txt
          fi

      # 7. Run Python script
      - name: Run script
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
          MASTODON_API_BASE_URL: ${{ secrets.MASTODON_API_BASE_URL }}
        run: python positive.py

      # 8. Save updated posted_urls.txt to cache
      - name: Save posted_urls.txt
        uses: actions/cache@v4
        with:
          path: posted_urls.txt
          key: posted-urls-${{ github.run_id }}
          restore-keys: |
            posted-urls-
