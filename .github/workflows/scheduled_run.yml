name: Scheduled Python Script

on:
  schedule:
    - cron: '0 */12 * * *'
  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Get last successful workflow run ID
      - name: Get last successful workflow run ID
        id: get_run_id
        run: |
          RUN_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/scheduled_run.yml/runs?status=success&branch=${{ github.ref_name }}" | \
            jq -r '.workflow_runs[0].id')
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT

      # Download latest posted-urls artifact from last successful workflow run
      - name: Download posted_urls.txt
        uses: actions/download-artifact@v4
        with:
          name: posted-urls
          path: .
          run-id: ${{ steps.get_run_id.outputs.run_id }}
        continue-on-error: true   # continue even if artifact not found

      - name: Show posted_urls.txt BEFORE
        run: cat posted_urls.txt || echo "(empty)"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run script
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
          MASTODON_API_BASE_URL: ${{ secrets.MASTODON_API_BASE_URL }}
        run: python positive.py

      - name: Show posted_urls.txt AFTER
        run: cat posted_urls.txt || echo "(empty)"

      # Upload the updated file again
      - name: Upload posted_urls.txt
        uses: actions/upload-artifact@v4
        with:
          name: posted-urls
          path: posted_urls.txt
